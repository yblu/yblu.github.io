<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | luyunbo's Blog]]></title>
  <link href="http://yblu.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://yblu.github.io/"/>
  <updated>2016-03-15T12:03:00+08:00</updated>
  <id>http://yblu.github.io/</id>
  <author>
    <name><![CDATA[Lu Yunbo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python学习资源]]></title>
    <link href="http://yblu.github.io/blog/2014/11/26/Python-resource/"/>
    <updated>2014-11-26T00:00:00+08:00</updated>
    <id>http://yblu.github.io/blog/2014/11/26/Python-resource</id>
    <content type="html"><![CDATA[<h1>Python学习资源</h1>

<ul>
<li><p><a href="http://woodpecker.org.cn/abyteofpython_cn/chinese/index.html">简明Python教程</a>是“A Byte of Python”的唯一指定简体中文译本，无论你是刚接触电脑还是有一个有经验的程序员，这本书都是可以帮你快速入门。</p></li>
<li><p>Python标准库是一个丰富的库，在大多数时候，你可以在这个库中找到你所需的东西。这被称为Python的“功能齐全”理念。我强烈建议你在开始开发大型Python程序之前浏览一下<a href="https://docs.python.org/3/" title="Python documenttation">Python标准文档</a>。</p></li>
<li><p><a href="https://www.python.org/">Python.org</a>——Python编程语言的官方主页。你可以在上面找到Python语言和解释器的最新版本。另外还有各种邮件列表活跃地讨论Python的各方面内容。</p></li>
<li><p>comp.lang.python是讨论Python语言的世界性新闻组。你可以把你的疑惑和询问贴在这个新闻组上。可以使用<a href="https://groups.google.com/forum/?hl=en#!overview">Google群</a>在线访问这个新闻组，或加入作为新闻组镜像的<a href="http://mail.python.org/mailman/listinfo/python-list">邮件列表</a>。</p></li>
<li><p><a href="http://aspn.activestate.com/ASPN/Python/Cookbook/">《Python实用大全》</a>是一个极有价值的秘诀和技巧集合，它帮助你解决某些使用Python的问题。这是每个Python用户必读的一本书。</p></li>
<li><p><a href="http://gnosis.cx/publish/tech_index_cp.html">《迷人的Python》</a>是David Mertz编著的一系列优秀的Python相关文章。</p></li>
<li><p><a href="http://www.diveintopython.org/">《深入理解Python》</a>是给有经验的Python程序员的一本很优秀的书。如果你已经完整地阅读了本书，那么我强烈建议你接下来阅读《深入理解Python》。它覆盖了包括XML处理、单元测试和功能性编程在内的广泛的主题。</p></li>
<li><p><a href="http://www.jython.org/">Jython</a>是用Java语言实现的Python解释器。这意味着你可以用Python语言编写程序而同时使用Java库！Jython是一个稳定成熟的软件。如果你也是一个Java程序员，我强烈建议你尝试一下Jython。</p></li>
<li><p><a href="http://www.ironpython.com/">IronPython</a>是用C#语言实现的Python解释器，可以运行在.NET、Mono和DotGNU平台上。这意味着你可以用Python语言编写程序而使用.NET库以及其他由这三种平台提供的库！IronPython还只是一个前期alpha测试软件，现在还只适合用来进行试验。Jim Hugunin，IronPython的开发者，已经加入了微软公司，将在将来全力开发一个完整版本的IronPython。</p></li>
<li><p><a href="http://www.caddr.com/code/lython/">Lython</a>是Python语言的Lisp前段。它类似于普通的Lisp语言，会被直接编译为Python字节码，这意味着它能与我们普通的Python代码协同工作。</p></li>
<li><p>另外还有很多很多的Python资源。其中比较有趣的有<a href="http://www.pythonware.com/daily/">Daily Python-URL!</a>，它使你保持与Python的最新进展同步。另外还有<a href="http://www.vex.net/parnassus/">Vaults of Parnassus</a>、<a href="http://www.onlamp.com/python/">ONLamp.com Python DevCenter</a>、<a href="http://dirtsimple.org/">dirtSimple.org</a>、<a href="http://pythonnotes.blogspot.com/">Python Notes</a>等等。</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
